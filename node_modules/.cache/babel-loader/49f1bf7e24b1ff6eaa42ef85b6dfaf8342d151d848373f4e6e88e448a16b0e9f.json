{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"To-Do List\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.newTodo = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTodo && $options.addTodo(...args), [\"enter\"])),\n    placeholder: \"Add a new task\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $options.newTodo]]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.completed = $event,\n      onChange: $event => $options.completeTodo(index)\n    }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), [[_vModelCheckbox, todo.completed]]), _createTextVNode(\" \" + _toDisplayString(todo.text) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTodo(index)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","$options","newTodo","$event","onKeyup","_cache","_withKeys","args","addTodo","placeholder","_Fragment","_renderList","_ctx","todos","todo","index","key","type","completed","onChange","completeTodo","_toDisplayString","text","onClick","deleteTodo","_hoisted_3"],"sources":["/Users/macos/Desktop/pratice/todolist/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>To-Do List</h1>\n    <input v-model=\"newTodo\" @keyup.enter=\"addTodo\" placeholder=\"Add a new task\" />\n    <ul>\n      <li v-for=\"(todo, index) in todos\" :key=\"index\">\n        <input type=\"checkbox\" v-model=\"todo.completed\" @change=\"completeTodo(index)\" />\n        {{ todo.text }}\n        <button @click=\"deleteTodo(index)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  computed: {\n    ...mapState(['todos']),\n    newTodo: {\n      get() {\n        return ''\n      },\n      set(value) {\n        this.newTask = value\n      }\n    }\n  },\n  methods: {\n    ...mapActions(['addTodoAction', 'completeTodoAction', 'deleteTodoAction']),\n    addTodo() {\n      if (this.newTodo.trim() !== '') {\n        this.addTodoAction({ text: this.newTodo, completed: false })\n        this.newTodo = ''\n      }\n    },\n    completeTodo(index) {\n      this.completeTodoAction(index)\n    },\n    deleteTodo(index) {\n      this.deleteTodoAction(index)\n    }\n  }\n}\n</script>"],"mappings":";gCAEIA,mBAAA,CAAmB,YAAf,YAAU;;;;uBADhBC,mBAAA,CAUM,cATJC,UAAmB,E,gBACnBF,mBAAA,CAA+E;+DAA/DG,QAAA,CAAAC,OAAO,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQN,QAAA,CAAAO,OAAA,IAAAP,QAAA,CAAAO,OAAA,IAAAD,IAAA,CAAO;IAAEE,WAAW,EAAC;iEAA5CR,QAAA,CAAAC,OAAO,E,GACvBJ,mBAAA,CAMK,c,kBALHC,mBAAA,CAIKW,SAAA,QAAAC,WAAA,CAJuBC,IAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBhB,mBAAA,CAIK;MAJ+BiB,GAAG,EAAED;IAAK,I,gBAC5CjB,mBAAA,CAAgF;MAAzEmB,IAAI,EAAC,UAAU;uCAAUH,IAAI,CAACI,SAAS,GAAAf,MAAA;MAAGgB,QAAM,EAAAhB,MAAA,IAAEF,QAAA,CAAAmB,YAAY,CAACL,KAAK;6EAA3CD,IAAI,CAACI,SAAS,E,oBAAkC,GAChF,GAAAG,gBAAA,CAAGP,IAAI,CAACQ,IAAI,IAAG,GACf,iBAAAxB,mBAAA,CAAkD;MAAzCyB,OAAK,EAAApB,MAAA,IAAEF,QAAA,CAAAuB,UAAU,CAACT,KAAK;OAAG,QAAM,iBAAAU,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}